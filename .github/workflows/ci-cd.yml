name: CI/CD - Full Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: sahti_db
          MYSQL_ROOT_HOST: '%'
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10
    defaults:
      run:
        working-directory: ./clinic-appointment-api
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build backend with devops profile (skip tests)
        run: mvn clean install -Pdevops -DskipTests

      - name: Run backend tests with devops profile
        run: mvn test -Pdevops

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [build-and-test-backend]
    steps:
      - uses: actions/checkout@v3

      - name: Build backend Docker image
        run: docker build -t myapp-backend:latest ./clinic-appointment-api

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v3

      - name: Deploy using Docker Compose
        run: |
          docker compose -f docker-compose.prod.yml up -d

      - name: Print deployment status
        run: docker ps

  mobile-frontend:
    name: Build & Test Mobile App
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant Gradle wrapper permission
        run: chmod +x ./Sahti-Testing/gradlew

      - name: Build APK
        working-directory: ./Sahti-Testing
        run: ./gradlew assembleDebug

      - name: Run unit tests
        working-directory: ./Sahti-Testing
        run: ./gradlew testDebugUnitTest

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: sahti-apk
          path: ./Sahti-Testing/app/build/outputs/apk/debug/app-debug.apk

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: sahti-test-report
          path: ./Sahti-Testing/app/build/reports/tests/testDebugUnitTest
