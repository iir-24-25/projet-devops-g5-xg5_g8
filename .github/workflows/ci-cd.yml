name: CI/CD - Full Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: sahti_db
          MYSQL_ROOT_HOST: '%'
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10
    defaults:
      run:
        working-directory: ./clinic-appointment-api
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build backend
        run: mvn clean install -DskipTests

      - name: Run backend tests
        run: mvn test

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [build-and-test-backend]
    steps:
      - uses: actions/checkout@v3

      - name: Build backend Docker image
        run: docker build -t myapp-backend:latest ./clinic-appointment-api

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v3

      - name: Deploy using Docker Compose
        run: |
          docker compose -f docker-compose.prod.yml up -d

      - name: Print deployment status
        run: docker ps

  mobile-frontend:
    name: Build Mobile App
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./Sahti-Testing
        run: npm install

      - name: Run tests (si tu as des tests)
        working-directory: ./Sahti-Testing
        run: npm test

      - name: Build APK (si tu utilises Expo)
        working-directory: ./Sahti-Testing
        run: |
          npm install -g expo-cli
          expo build:android --non-interactive --no-wait --platform android

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: sahti-apk
          path: ./Sahti-Testing/dist/*.apk